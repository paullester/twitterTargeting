{
    "collab_server" : "",
    "contents" : "extractSource <- function(source.string) {\n  source.string <- as.character(source.string)\n  if (is.na(source.string)){\n    return (\"None\")\n  } else if (str_detect(source.string, \"iPhone\")){\n    return(\"iPhone\")\n  } else if (str_detect(source.string, \"Web\")){\n    return(\"Web\")\n  } else if (str_detect(source.string, \"Android\")){\n    return(\"Android\")\n  } else {\n    return (\"None\")\n  }\n}\n\nextractTarget <- function(Word) {\n  Word <- as.character(Word)\n  if (str_detect(Word, \"hillary\")){\n    return (\"Crooked Hillary\")\n  } else if (str_detect(Word, \"bernie\")){\n    return(\"Bernie\")\n    #} else if (str_detect(Word, \"obama\")){\n    #  return(\"Obama\")\n  } else if (str_detect(Word, \"cruz\")){\n    return(\"Lyin' Ted\")\n  } else if (str_detect(Word, \"marco\")){\n    return(\"Little Marco\")\n  } else if (str_detect(Word, \"rubio\")){\n    return(\"Little Marco\")\n  }else if (str_detect(Word, \"jeb\")){\n    return(\"Low Energy Jeb\")\n  }else if (str_detect(Word, \"warren\")){\n    return(\"Goofy Elizabeth Warren\")\n  }else if (str_detect(Word, \"kasich\")){\n    return(\"1 for 38 Kasich\")\n  } else {\n    return (\"No target\")\n  }\n}\n\nextractParty <- function(Word) {\n  Word <- as.character(Word)\n  if (str_detect(Word, \"hillary\")){\n    return (\"Democrat\")\n  } else if (str_detect(Word, \"obama\")){\n    return(\"Democrat\")\n  } else if (str_detect(Word, \"bernie\")){\n    return(\"Democrat\")\n  } else if (str_detect(Word, \"cruz\")){\n    return(\"Republican\")\n  } else if (str_detect(Word, \"marco\")){\n    return(\"Republican\")\n  } else if (str_detect(Word, \"rubio\")){\n    return(\"Republican\")\n  }else if (str_detect(Word, \"jeb\")){\n    return(\"Republican\")\n  }else if (str_detect(Word, \"warren\")){\n    return(\"Republican\")\n  }else if (str_detect(Word, \"kasich\")){\n    return(\"Republican\")\n  } else {\n    return (\"No target\")\n  }\n}\n\n\n\nreorderTargets <- function(targets) {\n  targetstemp <- targets\n  for(i in seq(from=1, to=nrow(targets), by=7)){\n    targetstemp[i,] = targets[i+2,]\n    targetstemp[i+2,] = targets[i+3,]\n    targetstemp[i+3,] = targets[i+6,]\n    targetstemp[i+6,] = targets[i,]\n  }\n  return(targetstemp)\n}\n\nreorderParties <- function(party) {\n  partytemp <- party\n  for(i in seq(from=1, to=nrow(party), by=2)){\n    partytemp[i,] = party[i+1,]\n    partytemp[i+1,] = party[i,]\n  }\n  return(partytemp)\n}",
    "created" : 1485966322316.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3586120078",
    "id" : "DD80B18",
    "lastKnownWriteTime" : 1485966342,
    "last_content_update" : 1485966342234,
    "path" : "~/datascience/twitter_targeting/twitterTargetHelp.R",
    "project_path" : "twitterTargetHelp.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}