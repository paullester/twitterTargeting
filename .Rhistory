library(ggplot2)
library(stringr)
library(lubridate)
library(scales)
library(ggthemes)
library(extrafont)
library(splitstackshape)
library(dplyr)
#note weird bug when plyr loaded last
#http://stackoverflow.com/questions/26923862/why-are-my-dplyr-group-by-summarize-not-working-properly-name-collision-with
source("twitterTargetHelp.R")
source("twitterTargetHelp.R")
################################
#GET RAW TWEETS
#Tweets are from Trump twitter archive
#Pulled by copy and pasting into csv <- TODO: do through web scraping next time
#################################
#Try for all tweets
tweets.raw <- read.csv("rawtweets.csv", header = FALSE, as.is=TRUE)
tweets.df <- data.frame(tweets.raw)
#initial split
tweets.df<-cSplit(tweets.df, 'V1', sep="\xca", type.convert=FALSE)
keeps <- c("V1_1", "V1_2","V1_3")
tweets.df = subset(tweets.df, select = -c(V1_4,V1_5,V1_6) )
#Hacky Date fix
tweets.df$dateraw = substr(tweets.df$V1_1,1,nchar(tweets.df$V1_1)-12)
tweets.df$dateraw = trimws(tweets.df$dateraw)
tweets.df$month = substr(tweets.df$dateraw,1,3)
tweets.df$day = substr(tweets.df$dateraw,5,6)
tweets.df$day = gsub(',','',tweets.df$day)
tweets.df$year = substr(tweets.df$V1_1,nchar(tweets.df$dateraw)-3,nchar(tweets.df$dateraw))
tweets.df$date <- as.Date(paste(tweets.df$day,tweets.df$month,tweets.df$year, sep=""), "%d%b%Y")
tweets.df = subset(tweets.df, select = -c(V1_1,day,month,year,dateraw) )
#Pulling out the source - note for later, seems like all of Trump's "personal" tweets come from android.
source <- NULL
for(i in 1:nrow(tweets.df)) {
source <- c(source,extractSource(tweets.df[i,"V1_3"]))
}
tweets.df$source = source
###########################
##Clean text data
##########################
#remove tweets startign with " -> indication of a manual retweet
colnames(tweets.df)[1] <- "text"
reg <- "([^A-Za-z\\d#@']|'(?![A-Za-z\\d#@]))"
tweet.words <- tweets.df %>%
filter(!str_detect(text, '^"')) %>%
mutate(text = str_replace_all(text, "https://t.co/[A-Za-z\\d]+|&amp;", "")) %>%
unnest_tokens(word, text, token = "regex", pattern = reg) %>%
filter(!word %in% stop_words$word,
str_detect(word, "[a-z]"))
library(tidytext)
library(tidyr)
#remove tweets startign with " -> indication of a manual retweet
colnames(tweets.df)[1] <- "text"
reg <- "([^A-Za-z\\d#@']|'(?![A-Za-z\\d#@]))"
tweet.words <- tweets.df %>%
filter(!str_detect(text, '^"')) %>%
mutate(text = str_replace_all(text, "https://t.co/[A-Za-z\\d]+|&amp;", "")) %>%
unnest_tokens(word, text, token = "regex", pattern = reg) %>%
filter(!word %in% stop_words$word,
str_detect(word, "[a-z]"))
#Approach is basic: simply identifying when they are mentioned in a tweet
#Weakness: sometimes tweets may be directed at the person, but without mentioning them by name
#Note: ignoring obama for now, because wanted to focus on his direct opponents
targets <- NULL
for(i in 1:nrow(tweet.words)) {
targets <- c(targets,extractTarget(tweet.words[i,"word"]))
}
tweet.words$target= targets
party <- NULL
for(i in 1:nrow(tweet.words)) {
party <- c(party,extractParty(tweet.words[i,"word"]))
}
tweet.words$party= party
tweet.party.only <- tweet.words[which(!str_detect(tweet.words$party, "No target")),]
View(tweet.words)
tweet.words$party= party
tweet.party.only <- tweet.words[which(!str_detect(tweet.words$party, "No target")),]
#extract target frequency BY DAY
party.by.days= as.data.frame(table(tweet.party.only$party, tweet.party.only$date))
colnames(party.by.days) <- c("party","date", "freq")
party.by.days$date <- as.Date(party.by.days$date)
#Plot 1 - freqency of mentions vs date
p1 <- ggplot() + geom_line(aes(date, freq, color=party), party.by.days)
p1
p1
#Looks like plots needs to go by week to get cleaner lines
#BY WEEK
#note: hacky fix to enumerate weeks after >1 year
tweet.party.only$week = week(tweet.party.only$date)+(53*(year(tweet.party.only$date)-2015))
party.by.week = as.data.frame(table(tweet.party.only$party, tweet.party.only$week))
colnames(party.by.week) <- c("party","week", "freq")
party.by.week.percentage<- party.by.week %>% group_by(week) %>% mutate(percentage = freq/sum(freq))
#note this is to allow for geom_Area to map
party.by.week.percentage$week2 = as.integer(party.by.week.percentage$week)
Palette1 <- c('green','blue')
#ATTEMPTING TO FIX ORDER
party.by.week.percentage$party2 <- factor(party.by.week.percentage$party, levels=c("Republican","Democrat"))
party.by.week.percentage$party2 <- factor(party.by.week.percentage$party, levels=rev(levels(party.by.week.percentage$party)))
#Looks like plots needs to go by week to get cleaner lines
#BY WEEK
#note: hacky fix to enumerate weeks after >1 year
tweet.party.only$week = week(tweet.party.only$date)+(53*(year(tweet.party.only$date)-2015))
party.by.week = as.data.frame(table(tweet.party.only$party, tweet.party.only$week))
colnames(party.by.week) <- c("party","week", "freq")
party.by.week.percentage<- party.by.week %>% group_by(week) %>% mutate(percentage = freq/sum(freq))
#note this is to allow for geom_Area to map
party.by.week.percentage$week2 = as.integer(party.by.week.percentage$week)
Palette1 <- c('green','blue')
#ATTEMPTING TO FIX ORDER
party.by.week.percentage$party2 <- factor(party.by.week.percentage$party, levels=c("Republican","Democrat"))
party.by.week.percentage$party2 <- factor(party.by.week.percentage$party, levels=rev(levels(party.by.week.percentage$party)))
p4 <- ggplot() + geom_area(aes(y=percentage, x=week2, fill=party2), party.by.week.percentage,
stat="identity") + ylab("percentage of tweets") + xlab("week # since Jan")
p4
p4 + scale_x_continuous(breaks=seq(1,72,2),labels=c("Jul15", "Aug15", "Sep15", "Oct15", "Nov15", "Dec15", "Jan16", "Feb16", "Mar16", "Apr16", "May16", "Jun16", "Jul16", "Jul16", "Aug16", "Sep16", "Oct16","Nov16"))
+ scale_y_continuous(labels = percent) + scale_fill_manual(values = Palette2)
p4 + scale_x_continuous(breaks=seq(1,72,2),labels=c("Jul15", "Aug15", "Sep15", "Oct15", "Nov15", "Dec15", "Jan16", "Feb16", "Mar16", "Apr16", "May16", "Jun16", "Jul16", "Jul16", "Aug16", "Sep16", "Oct16","Nov16")) + scale_y_continuous(labels = percent) + scale_fill_manual(values = Palette2)
p4 + scale_x_continuous(breaks=seq(3,72,4),labels=c("Jul15", "Aug15", "Sep15", "Oct15", "Nov15", "Dec15", "Jan16", "Feb16", "Mar16", "Apr16", "May16", "Jun16", "Jul16", "Jul16", "Aug16", "Sep16", "Oct16","Nov16")) + scale_y_continuous(labels = percent) + scale_fill_manual(values = Palette2)
Palette2 <- c('dodgerblue2','indianred1')
p4 + scale_x_continuous(breaks=seq(3,72,4),labels=c("Jul15", "Aug15", "Sep15", "Oct15", "Nov15", "Dec15", "Jan16", "Feb16", "Mar16", "Apr16", "May16", "Jun16", "Jul16", "Jul16", "Aug16", "Sep16", "Oct16","Nov16")) + scale_y_continuous(labels = percent) + scale_fill_manual(values = Palette2)
p4 <- ggplot() + geom_area(aes(y=percentage, x=week2, fill=party2), party.by.week.percentage,
stat="identity") + ylab("percentage of tweets") + xlab("week # since Jan")
p4
Palette2 <- c('indianred1','dodgerblue2')
p4 + scale_x_continuous(breaks=seq(3,72,4),labels=c("Jul15", "Aug15", "Sep15", "Oct15", "Nov15", "Dec15", "Jan16", "Feb16", "Mar16", "Apr16", "May16", "Jun16", "Jul16", "Jul16", "Aug16", "Sep16", "Oct16","Nov16")) + scale_y_continuous(labels = percent) + scale_fill_manual(values = Palette2)
#Filter out the "no targets"
tweet.targets.only <- tweet.words[which(!str_detect(tweet.words$target, "No target")),]
#extract target frequency BY DAY
targets.by.day= as.data.frame(table(tweet.targets.only$target, tweet.targets.only$date))
colnames(targets.by.day) <- c("target","date", "freq")
targets.by.day$date <- as.Date(targets.by.day$date)
#Plot 0 - freqency of mentions vs date
p0 <- ggplot() + geom_line(aes(date, freq, color=target), targets.by.day)
p0
#BY WEEK
#note: hacky fix to enumerate weeks after >1 year
tweet.targets.only$week = week(tweet.targets.only$date)+(53*(year(tweet.targets.only$date)-2015))
targets.by.week = as.data.frame(table(tweet.targets.only$target, tweet.targets.only$week))
colnames(targets.by.week) <- c("target","week", "freq")
targets.by.week.percentage<- targets.by.week %>% group_by(week) %>% mutate(percentage = freq/sum(freq))
#note this is to allow for geom_Area to map
targets.by.week.percentage$week2 = as.integer(targets.by.week.percentage$week)
targetstest <- reorderTargets(targets.by.week.percentage)
p2 <- ggplot() + geom_area(aes(y=percentage, x=week2, fill=target), targetstest,
stat="identity") + ylab("percentage of tweets") + xlab("date")
Palette1 <- c('lightpink','darkslategray1','dodgerblue2','lightskyblue4', 'maroon1','hotpink4','indianred1')
p2 + scale_x_continuous(breaks=seq(3,72,4),
labels=c("Jul15", "Aug15", "Sep15", "Oct15", "Nov15", "Dec15", "Jan16", "Feb16", "Mar16", "Apr16", "May16", "Jun16", "Jul16", "Jul16", "Aug16", "Sep16", "Oct16","Nov16"))+
scale_y_continuous(labels = percent)
p4 + scale_x_continuous(breaks=seq(3,72,4),labels=c("Jul15", "Aug15", "Sep15", "Oct15", "Nov15", "Dec15", "Jan16", "Feb16", "Mar16", "Apr16", "May16", "Jun16", "Jul16", "Jul16", "Aug16", "Sep16", "Oct16","Nov16")) + scale_y_continuous(labels = percent) + scale_fill_manual(values = Palette2)
